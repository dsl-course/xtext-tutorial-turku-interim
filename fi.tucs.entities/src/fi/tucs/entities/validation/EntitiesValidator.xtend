/*
 * generated by Xtext 2.12.0
 */
package fi.tucs.entities.validation

//import fi.tucs.entities.entities.Entity
//import org.eclipse.xtext.validation.Check
import fi.tucs.entities.entities.EntitiesPackage

import static extension java.lang.Character.*
import fi.tucs.entities.entities.AssignmentStatement
import fi.tucs.entities.typing.ExpressionTypeComputer
import com.google.inject.Inject
import org.eclipse.xtext.validation.Check
import fi.tucs.entities.entities.Entity

/**
 * This class contains custom validation rules. 
 *
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#validation
 */
class EntitiesValidator extends AbstractEntitiesValidator {
	
//	public static val INVALID_NAME = 'invalidName'
//
//	@Check
//	def checkGreetingStartsWithCapital(Greeting greeting) {
//		if (!Character.isUpperCase(greeting.name.charAt(0))) {
//			warning('Name should start with a capital', 
//					EntitiesPackage.Literals.GREETING__NAME,
//					INVALID_NAME)
//		}
//	}

	
	protected static val ISSUE_CODE_PREFIX = "fi.tucs.entities.";
	
	public static val HIERARCHY_CYCLE 				= ISSUE_CODE_PREFIX + "HierarchyCycle";
	public static val INVALID_ENTITY_NAME 			= ISSUE_CODE_PREFIX + "InvalidEntityName";
	public static val INVALID_FIELD_NAME_LOWERCASE 	= ISSUE_CODE_PREFIX + "InvalidFieldNameLowerCase";
	public static val INVALID_BOOLEAN_FIELD_NAME 	= ISSUE_CODE_PREFIX + "InvalidBooleanFieldName";
	
	
	@Check
	// checking whether inheritance hierarchy has cycles
	def fjsdkfjsdfklsd(Entity entity) {
		if (entity.superType === null)
			return
			
		val visitedEntities = newHashSet(entity)
		
		var current = entity.superType
		while (current !== null) {
			
			if (visitedEntities.contains(current)) {
				error("Cycle in hierarchy of entity '" + current.name + "'",
					EntitiesPackage.eINSTANCE.entity_SuperType,
					HIERARCHY_CYCLE,
					entity.name
				)
				return
			} // end if
			
			visitedEntities.add(current)
			current = current.superType
			
		} // end while
 	}


	@Check
	def checkEntityNameStartsWithCapital(Entity entity) {
		if (entity.name.charAt(0).lowerCase) {
			warning("Entity name should start with a capital",
				EntitiesPackage.eINSTANCE.entity_Name,
				INVALID_ENTITY_NAME, // issue code
				entity.name // issue data
			)
		}
	}
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	@Inject extension ExpressionTypeComputer fasfsjflksjflks
	
	@Check
	def fjsdklfsdfkljs(AssignmentStatement x) {
		val left = x.assignee.typeFor
		val right = x.expr.typeFor
		
		if (right !== null && left !== null && !right.equals(left)) {
			error("Type mismatch: " + left + " and "+ right,
				EntitiesPackage.eINSTANCE.assignmentStatement_Assignee
			)
		}
	}
	
	
}